{"ast":null,"code":"import _regeneratorRuntime from\"/Users/erick/Documents/react proyectos/gifexpertapp/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/erick/Documents/react proyectos/gifexpertapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var getGrif=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(category){var url,resp,_yield$resp$json,data,gifs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"https://api.giphy.com/v1/gifs/search?q=\".concat(encodeURI(category),\"&limit=10&api_key=xygE4JSp5ACW95idAIoNzzzD25KA2fxL\");_context.next=3;return fetch(url);case 3:resp=_context.sent;_context.next=6;return resp.json();case 6:_yield$resp$json=_context.sent;data=_yield$resp$json.data;gifs=data.map(function(img){return{id:img.id,title:img.title,url:img.images.downsized_medium.url};});return _context.abrupt(\"return\",gifs);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getGrif(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/erick/Documents/react proyectos/gifexpertapp/src/helpers/getGifs.js"],"names":["getGrif","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium"],"mappings":"yQAEA,MAAO,IAAMA,CAAAA,OAAO,0FAAG,iBAAOC,QAAP,0JAEbC,GAFa,kDAEoCC,SAAS,CAAEF,QAAF,CAF7C,6EAGAG,CAAAA,KAAK,CAACF,GAAD,CAHL,QAGbG,IAHa,qCAIIA,CAAAA,IAAI,CAACC,IAAL,EAJJ,uCAIXC,IAJW,kBAIXA,IAJW,CAKbC,IALa,CAKND,IAAI,CAACE,GAAL,CAAS,SAAAC,GAAG,CAAE,CAEvB,MAAO,CACHC,EAAE,CAAUD,GAAG,CAACC,EADb,CAEHC,KAAK,CAAOF,GAAG,CAACE,KAFb,CAGHV,GAAG,CAASQ,GAAG,CAACG,MAAJ,CAAWC,gBAAX,CAA4BZ,GAHrC,CAAP,CAKH,CAPY,CALM,iCAcZM,IAdY,yDAAH,kBAAPR,CAAAA,OAAO,4CAAb","sourcesContent":["\n\nexport const getGrif = async( category ) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=xygE4JSp5ACW95idAIoNzzzD25KA2fxL`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img=>{\n\n        return {\n            id      :   img.id,\n            title   :   img.title,\n            url     :   img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n    //console.log(gifs);\n    //setImages(gifs);\n}"]},"metadata":{},"sourceType":"module"}