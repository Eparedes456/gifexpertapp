{"version":3,"sources":["Componentes/GifExpertComponent/AddCategory.js","helpers/getGifs.js","Componentes/GifExpertComponent/GifGridItem.js","Componentes/GifExpertComponent/GifGrid.js","hooks/useFetchGifs.js","Componentes/GifExpertComponent/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","getGrif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAoBA,OACI,mCACA,sBAAMC,SAbU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BC,QAAQC,IAAI,uBACZV,GAAe,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACtCR,EAAc,MAOlB,SACI,uBACIS,KAAO,OACPC,MAAUX,EACVY,SAxBQ,SAACT,GAEjBI,QAAQC,IAAIL,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CACHC,GAAYD,EAAIC,GAChBC,MAAYF,EAAIE,MAChBV,IAAYQ,EAAIG,OAAOC,iBAAiBZ,QAV7B,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAKA,QCDJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAQrB,ECV0B,SAAEA,GAE5B,MAAyBhB,mBAAS,CAC9BuB,KAAU,GACVa,SAAU,IAFd,mBAAOC,EAAP,KAAaC,EAAb,KAgBA,OAXAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAUkB,EACVL,SAAU,SAInB,CAACpB,IAEGqB,EDR0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAYa,EAApB,EAAoBA,QAGpB,OACI,sBAAKJ,UAAW,YAAhB,UACI,mCAAOhB,EAAP,OAECoB,GAAW,mBAAGJ,UAAY,mCAAf,0BAGRH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGQA,GADGA,EAAIC,WEtBrBgB,EAAe,WAEzB,MAAmC3C,mBAAS,CAAC,cAA7C,mBAAO4C,EAAP,KAAkB7C,EAAlB,KAOA,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,6BAEQ6C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADJA,Y,MChBlC6B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.59524a7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategory = ({ setCategorias }) => {\n //holi\n    const [inputValue,setInputValue] = useState('');\n\n    const changeValue = (e) =>{\n\n        console.log(e.target.value);\n        setInputValue(e.target.value);\n        \n    }\n\n    const addCategory = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n\n            console.log('aGRENGANDO CATEGORY');\n            setCategorias( cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <>\n        <form onSubmit = { addCategory }>\n            <input\n                type = \"text\" \n                value = { inputValue }\n                onChange = { changeValue }\n            />\n\n        </form>\n            \n            \n        </>\n    )\n}\n\n\n","\n\nexport const getGrif = async( category ) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=xygE4JSp5ACW95idAIoNzzzD25KA2fxL`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img=>{\n\n        return {\n            id      :   img.id,\n            title   :   img.title,\n            url     :   img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n    //console.log(gifs);\n    //setImages(gifs);\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src= {url} alt={ title}  />\n            <p>{ title}</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n   \n    \n\n\n    //getGrif();\n\n    const { data:images,loading }  = useFetchGifs(category);\n    \n\n    return (\n        <div className= \"card-grid\">\n            <h3> { category } </h3>\n\n           { loading && <p className = \"animate__animated animate__flash\">Cargando ...</p> }\n            \n            {\n                images.map(img =>(\n                    <GifGridItem  \n                        \n                        key = {img.id}\n                        {...img}\n                    />\n                ))\n            }\n\n\n        </div>\n        \n            \n            \n        \n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGrif } from '../helpers/getGifs';\n\nexport const  useFetchGifs  = ( category ) => {\n\n    const [state,setState] = useState({\n        data    : [],\n        loading : true\n    });\n\n    useEffect(()=>{\n\n        getGrif(category).then(imgs=>{\n            setState({\n                data    : imgs,\n                loading : false,\n            })\n        })\n\n    }, [category])\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport  const GifExpertApp = () =>{\n\n    const [categorias,setCategorias] = useState(['One punch']);\n\n    /*const addCategory =()=>{\n        setCategorias(['Nueva categoria',...categorias]);\n        console.log('hola');\n    }*/\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr />\n\n            <AddCategory setCategorias = { setCategorias} />\n\n            <ol>\n                {\n                    categorias.map(category =>(\n                        <GifGrid \n                            key={ category }\n                            category={category} \n                        />\n                    )\n                       \n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './Componentes/GifExpertComponent/GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n \n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}